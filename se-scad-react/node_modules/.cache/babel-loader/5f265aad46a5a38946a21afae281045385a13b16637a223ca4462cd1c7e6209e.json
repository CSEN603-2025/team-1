{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halah\\\\OneDrive\\\\Desktop\\\\team-1\\\\se-scad-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport CompanyRegister from './CompanyRegister';\nimport CompanyLogin from './companylogin';\nimport StudentPage from './studentpage';\nimport SCADPage from './scadpage';\nimport CompanyPage from './companypage';\nimport FacultyPage from './facultypage';\nimport ViewRegistration from './viewregistration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Manage notification state\n  const [notificationMessage, setNotificationMessage] = useState('');\n\n  // Dummy users for login\n  const dummyUsers = [{\n    role: 'student',\n    email: 'student@example.com',\n    password: 'student123'\n  }, {\n    role: 'scad',\n    email: 'scad@example.com',\n    password: 'scad123'\n  }, {\n    role: 'faculty',\n    email: 'faculty@example.com',\n    password: 'faculty123'\n  }];\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n\n  // Handle form submission for login\n  const handleLogin = e => {\n    e.preventDefault();\n    let valid = true;\n    setEmailError('');\n    setPasswordError('');\n    const trimmedEmail = email.trim();\n    const trimmedPassword = password.trim();\n    const user = dummyUsers.find(u => u.email === trimmedEmail);\n    const companies = JSON.parse(localStorage.getItem('companies')) || [];\n    const companyUser = companies.find(c => c.companyEmail === trimmedEmail);\n    if (!user && !companyUser) {\n      valid = false;\n      setEmailError('Invalid email');\n    } else if (user && user.password !== trimmedPassword) {\n      valid = false;\n      setPasswordError('Wrong password');\n    } else if (companyUser && companyUser.password !== trimmedPassword) {\n      valid = false;\n      setPasswordError('Wrong password');\n    } else if (user) {\n      sessionStorage.setItem('user', JSON.stringify(user));\n      if (user.role === 'student') {\n        navigate('/studentpage', {\n          state: {\n            user\n          }\n        });\n      } else if (user.role === 'scad') {\n        navigate('/scadpage', {\n          state: {\n            user\n          }\n        });\n      } else if (user.role === 'faculty') {\n        navigate('/facultypage', {\n          state: {\n            user\n          }\n        });\n      }\n    } else {\n      // no student/scad/faculty â†’ must be company\n      sessionStorage.setItem('companyUser', JSON.stringify(companyUser));\n      navigate('/company-dashboard', {\n        state: {\n          companyUser\n        }\n      });\n    }\n    return valid;\n  };\n  useEffect(() => {\n    // If someone is already logged in as a student/scad/faculty, redirect\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      if (user.role === 'student') return navigate('/studentpage');\n      if (user.role === 'scad') return navigate('/scadpage');\n      if (user.role === 'faculty') return navigate('/facultypage');\n    }\n\n    // If a companyUser session exists, redirect there\n    const storedCompany = sessionStorage.getItem('companyUser');\n    if (storedCompany) {\n      const companyUser = JSON.parse(storedCompany);\n      return navigate('/company-dashboard', {\n        state: {\n          companyUser\n        }\n      });\n    }\n\n    // Otherwise, if `companies` array has entries, take the last one as newly registered\n    const arr = JSON.parse(sessionStorage.getItem('companies') || '[]');\n    if (arr.length > 0) {\n      const companyUser = arr[arr.length - 1];\n      sessionStorage.setItem('companyUser', JSON.stringify(companyUser));\n      return navigate('/company-dashboard', {\n        state: {\n          companyUser\n        }\n      });\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(CompanyLogin, {\n          email: email,\n          setEmail: setEmail,\n          password: password,\n          setPassword: setPassword,\n          emailError: emailError,\n          passwordError: passwordError,\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/company-register\",\n        element: /*#__PURE__*/_jsxDEV(CompanyRegister, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/company-login\",\n        element: /*#__PURE__*/_jsxDEV(CompanyLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/studentpage\",\n        element: /*#__PURE__*/_jsxDEV(StudentPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/scadpage\",\n        element: /*#__PURE__*/_jsxDEV(SCADPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/company-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(CompanyPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/facultypage\",\n        element: /*#__PURE__*/_jsxDEV(FacultyPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/view-registration\",\n        element: /*#__PURE__*/_jsxDEV(ViewRegistration, {\n          setNotificationMessage: setNotificationMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), notificationMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        backgroundColor: '#6aabd2',\n        color: 'white',\n        padding: '10px',\n        borderRadius: '4px'\n      },\n      children: notificationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hkAfCPHyyCF25TS8dziCjsjzDOM=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","useNavigate","CompanyRegister","CompanyLogin","StudentPage","SCADPage","CompanyPage","FacultyPage","ViewRegistration","jsxDEV","_jsxDEV","App","_s","notificationMessage","setNotificationMessage","dummyUsers","role","email","password","setEmail","setPassword","emailError","setEmailError","passwordError","setPasswordError","navigate","handleLogin","e","preventDefault","valid","trimmedEmail","trim","trimmedPassword","user","find","u","companies","JSON","parse","localStorage","getItem","companyUser","c","companyEmail","sessionStorage","setItem","stringify","state","storedUser","storedCompany","arr","length","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","left","transform","backgroundColor","color","padding","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/halah/OneDrive/Desktop/team-1/se-scad-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport CompanyRegister  from './CompanyRegister';\nimport CompanyLogin     from './companylogin';\nimport StudentPage      from './studentpage';\nimport SCADPage         from './scadpage';\nimport CompanyPage      from './companypage';\nimport FacultyPage      from './facultypage';\nimport ViewRegistration from './viewregistration';\n\nfunction App() {\n  // Manage notification state\n  const [notificationMessage, setNotificationMessage] = useState('');\n\n  // Dummy users for login\n  const dummyUsers = [\n    { role: 'student', email: 'student@example.com', password: 'student123' },\n    { role: 'scad',    email: 'scad@example.com',    password: 'scad123'    },\n    { role: 'faculty', email: 'faculty@example.com', password: 'faculty123' },\n  ];\n\n  const [email, setEmail]       = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError]     = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n\n  // Handle form submission for login\n  const handleLogin = (e) => {\n    e.preventDefault();\n    let valid = true;\n\n    setEmailError('');\n    setPasswordError('');\n\n    const trimmedEmail    = email.trim();\n    const trimmedPassword = password.trim();\n\n    const user = dummyUsers.find(u => u.email === trimmedEmail);\n    const companies = JSON.parse(localStorage.getItem('companies')) || [];\n    const companyUser = companies.find(c => c.companyEmail === trimmedEmail);\n\n    if (!user && !companyUser) {\n      valid = false;\n      setEmailError('Invalid email');\n    } else if (user && user.password !== trimmedPassword) {\n      valid = false;\n      setPasswordError('Wrong password');\n    } else if (companyUser && companyUser.password !== trimmedPassword) {\n      valid = false;\n      setPasswordError('Wrong password');\n    } else if (user) {\n      sessionStorage.setItem('user', JSON.stringify(user));\n      if (user.role === 'student') {\n        navigate('/studentpage', { state: { user } });\n      } else if (user.role === 'scad') {\n        navigate('/scadpage', { state: { user } });\n      } else if (user.role === 'faculty') {\n        navigate('/facultypage', { state: { user } });\n      }\n    } else {\n      // no student/scad/faculty â†’ must be company\n      sessionStorage.setItem('companyUser', JSON.stringify(companyUser));\n      navigate('/company-dashboard', { state: { companyUser } });\n    }\n\n    return valid;\n  };\n\n  useEffect(() => {\n    // If someone is already logged in as a student/scad/faculty, redirect\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      if (user.role === 'student')      return navigate('/studentpage');\n      if (user.role === 'scad')         return navigate('/scadpage');\n      if (user.role === 'faculty')      return navigate('/facultypage');\n    }\n\n    // If a companyUser session exists, redirect there\n    const storedCompany = sessionStorage.getItem('companyUser');\n    if (storedCompany) {\n      const companyUser = JSON.parse(storedCompany);\n      return navigate('/company-dashboard', { state: { companyUser } });\n    }\n\n    // Otherwise, if `companies` array has entries, take the last one as newly registered\n    const arr = JSON.parse(sessionStorage.getItem('companies') || '[]');\n    if (arr.length > 0) {\n      const companyUser = arr[arr.length - 1];\n      sessionStorage.setItem('companyUser', JSON.stringify(companyUser));\n      return navigate('/company-dashboard', { state: { companyUser } });\n    }\n  }, [navigate]);\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <CompanyLogin\n              email={email}\n              setEmail={setEmail}\n              password={password}\n              setPassword={setPassword}\n              emailError={emailError}\n              passwordError={passwordError}\n              handleLogin={handleLogin}\n            />\n          }\n        />\n\n        <Route path=\"/company-register\" element={<CompanyRegister />} />\n        <Route path=\"/company-login\"    element={<CompanyLogin />} />\n        <Route path=\"/studentpage\"      element={<StudentPage />} />\n        <Route path=\"/scadpage\"         element={<SCADPage />} />\n        <Route path=\"/company-dashboard\" element={<CompanyPage />} />\n        <Route path=\"/facultypage\"      element={<FacultyPage />} />\n        <Route path=\"/view-registration\" element={<ViewRegistration setNotificationMessage={setNotificationMessage} />} />\n      </Routes>\n\n      {notificationMessage && (\n        <div style={{\n          position: 'fixed',\n          top: '10px', left: '50%',\n          transform: 'translateX(-50%)',\n          backgroundColor: '#6aabd2',\n          color: 'white',\n          padding: '10px',\n          borderRadius: '4px'\n        }}>\n          {notificationMessage}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}