{"ast":null,"code":"// src/utils/companyStorage.js\nexport function getCurrentCompany() {\n  try {\n    const stored = localStorage.getItem('currentCompany') || sessionStorage.getItem('currentCompany');\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error('Error parsing stored company:', error);\n    return null;\n  }\n}\nexport function setCurrentCompany(company) {\n  try {\n    const data = JSON.stringify(company);\n    localStorage.setItem('currentCompany', data);\n  } catch (error) {\n    console.error('Error setting company data:', error);\n  }\n}","map":{"version":3,"names":["getCurrentCompany","stored","localStorage","getItem","sessionStorage","JSON","parse","error","console","setCurrentCompany","company","data","stringify","setItem"],"sources":["C:/Users/halah/OneDrive/Desktop/team-1/se-scad-react/src/companyStorage.js"],"sourcesContent":["// src/utils/companyStorage.js\r\nexport function getCurrentCompany() {\r\n    try {\r\n      const stored = localStorage.getItem('currentCompany') || sessionStorage.getItem('currentCompany');\r\n      return stored ? JSON.parse(stored) : null;\r\n    } catch (error) {\r\n      console.error('Error parsing stored company:', error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  export function setCurrentCompany(company) {\r\n    try {\r\n      const data = JSON.stringify(company);\r\n      localStorage.setItem('currentCompany', data);\r\n    } catch (error) {\r\n      console.error('Error setting company data:', error);\r\n    }\r\n  }\r\n  "],"mappings":"AAAA;AACA,OAAO,SAASA,iBAAiBA,CAAA,EAAG;EAChC,IAAI;IACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,gBAAgB,CAAC;IACjG,OAAOF,MAAM,GAAGI,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC,GAAG,IAAI;EAC3C,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF;AAEA,OAAO,SAASE,iBAAiBA,CAACC,OAAO,EAAE;EACzC,IAAI;IACF,MAAMC,IAAI,GAAGN,IAAI,CAACO,SAAS,CAACF,OAAO,CAAC;IACpCR,YAAY,CAACW,OAAO,CAAC,gBAAgB,EAAEF,IAAI,CAAC;EAC9C,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}