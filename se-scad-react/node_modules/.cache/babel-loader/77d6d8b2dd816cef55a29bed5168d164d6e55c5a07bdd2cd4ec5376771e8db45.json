{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halah\\\\OneDrive\\\\Desktop\\\\se-scad-react\\\\src\\\\companylogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyLogin() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const handleLogin = e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!email) {\n      newErrors.email = 'Email is required';\n    } else if (!emailRegex.test(email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!password) {\n      newErrors.password = 'Password is required';\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length > 0) return;\n\n    // Retrieve registered companies from localStorage\n    const companies = JSON.parse(localStorage.getItem('companies')) || [];\n    const companyUser = companies.find(c => c.companyEmail === email && c.password === password);\n    if (companyUser) {\n      alert('Login successful');\n      navigate('/company-dashboard'); // Replace with your desired route\n    } else {\n      setErrors({\n        form: 'Login failed. Please check your credentials.'\n      });\n    }\n  };\n  const inputStyle = error => ({\n    width: '100%',\n    padding: '8px',\n    marginBottom: '5px',\n    border: error ? '1px solid red' : '1px solid #ddd',\n    boxSizing: 'border-box' // Added for consistent sizing\n  });\n  const errorText = msg => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red',\n      fontSize: '12px',\n      marginBottom: '10px'\n    },\n    children: msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      padding: '20px 0'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        width: '400px',\n        maxWidth: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Company Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            style: inputStyle(errors.email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), errors.email && errorText(errors.email)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            style: inputStyle(errors.password)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), errors.password && errorText(errors.password)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), errors.form && errorText(errors.form), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: '10px',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            marginTop: '10px',\n            width: '100%',\n            cursor: 'pointer'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyLogin, \"TbCsIamWGxXFPloLN88a2jXOzMo=\", false, function () {\n  return [useNavigate];\n});\n_c = CompanyLogin;\nexport default CompanyLogin;\nvar _c;\n$RefreshReg$(_c, \"CompanyLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CompanyLogin","_s","email","setEmail","password","setPassword","errors","setErrors","navigate","emailRegex","handleLogin","e","preventDefault","newErrors","test","Object","keys","length","companies","JSON","parse","localStorage","getItem","companyUser","find","c","companyEmail","alert","form","inputStyle","error","width","padding","marginBottom","border","boxSizing","errorText","msg","style","color","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","minHeight","borderRadius","maxWidth","onSubmit","htmlFor","id","type","value","onChange","target","backgroundColor","marginTop","cursor","_c","$RefreshReg$"],"sources":["C:/Users/halah/OneDrive/Desktop/se-scad-react/src/companylogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CompanyLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n\r\n    if (!email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!emailRegex.test(email)) {\r\n      newErrors.email = 'Invalid email format';\r\n    }\r\n\r\n    if (!password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length > 0) return;\r\n\r\n    // Retrieve registered companies from localStorage\r\n    const companies = JSON.parse(localStorage.getItem('companies')) || [];\r\n    const companyUser  = companies.find(\r\n      (c) => c.companyEmail === email && c.password === password\r\n    );\r\n\r\n    if (companyUser ) {\r\n      alert('Login successful');\r\n      navigate('/company-dashboard'); // Replace with your desired route\r\n    } else {\r\n      setErrors({ form: 'Login failed. Please check your credentials.' });\r\n    }\r\n  };\r\n\r\n  const inputStyle = (error) => ({\r\n    width: '100%',\r\n    padding: '8px',\r\n    marginBottom: '5px',\r\n    border: error ? '1px solid red' : '1px solid #ddd',\r\n    boxSizing: 'border-box', // Added for consistent sizing\r\n  });\r\n\r\n  const errorText = (msg) => (\r\n    <div style={{ color: 'red', fontSize: '12px', marginBottom: '10px' }}>{msg}</div>\r\n  );\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', padding: '20px 0' }}>\r\n      <div style={{ padding: '20px', border: '1px solid #ddd', borderRadius: '8px', width: '400px', maxWidth: '100%' }}>\r\n        <h2>Company Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <div>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={inputStyle(errors.email)}\r\n            />\r\n            {errors.email && errorText(errors.email)}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              style={inputStyle(errors.password)}\r\n            />\r\n            {errors.password && errorText(errors.password)}\r\n          </div>\r\n          {errors.form && errorText(errors.form)}\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              padding: '10px',\r\n              backgroundColor: '#4CAF50',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              marginTop: '10px',\r\n              width: '100%',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,UAAU,GAAG,4BAA4B;EAE/C,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAI,CAACX,KAAK,EAAE;MACVW,SAAS,CAACX,KAAK,GAAG,mBAAmB;IACvC,CAAC,MAAM,IAAI,CAACO,UAAU,CAACK,IAAI,CAACZ,KAAK,CAAC,EAAE;MAClCW,SAAS,CAACX,KAAK,GAAG,sBAAsB;IAC1C;IAEA,IAAI,CAACE,QAAQ,EAAE;MACbS,SAAS,CAACT,QAAQ,GAAG,sBAAsB;IAC7C;IAEAG,SAAS,CAACM,SAAS,CAAC;IAEpB,IAAIE,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,MAAM,GAAG,CAAC,EAAE;;IAEvC;IACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IACrE,MAAMC,WAAW,GAAIL,SAAS,CAACM,IAAI,CAChCC,CAAC,IAAKA,CAAC,CAACC,YAAY,KAAKxB,KAAK,IAAIuB,CAAC,CAACrB,QAAQ,KAAKA,QACpD,CAAC;IAED,IAAImB,WAAW,EAAG;MAChBI,KAAK,CAAC,kBAAkB,CAAC;MACzBnB,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAClC,CAAC,MAAM;MACLD,SAAS,CAAC;QAAEqB,IAAI,EAAE;MAA+C,CAAC,CAAC;IACrE;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,KAAK,KAAM;IAC7BC,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,KAAK;IACdC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAEJ,KAAK,GAAG,eAAe,GAAG,gBAAgB;IAClDK,SAAS,EAAE,YAAY,CAAE;EAC3B,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAIC,GAAG,iBACpBtC,OAAA;IAAKuC,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE,MAAM;MAAEP,YAAY,EAAE;IAAO,CAAE;IAAAQ,QAAA,EAAEJ;EAAG;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CACjF;EAED,oBACE9C,OAAA;IAAKuC,KAAK,EAAE;MAAEQ,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,SAAS,EAAE,OAAO;MAAEjB,OAAO,EAAE;IAAS,CAAE;IAAAS,QAAA,eACrH1C,OAAA;MAAKuC,KAAK,EAAE;QAAEN,OAAO,EAAE,MAAM;QAAEE,MAAM,EAAE,gBAAgB;QAAEgB,YAAY,EAAE,KAAK;QAAEnB,KAAK,EAAE,OAAO;QAAEoB,QAAQ,EAAE;MAAO,CAAE;MAAAV,QAAA,gBAC/G1C,OAAA;QAAA0C,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB9C,OAAA;QAAMqD,QAAQ,EAAE1C,WAAY;QAAA+B,QAAA,gBAC1B1C,OAAA;UAAA0C,QAAA,gBACE1C,OAAA;YAAOsD,OAAO,EAAC,OAAO;YAAAZ,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrC9C,OAAA;YACEuD,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEtD,KAAM;YACbuD,QAAQ,EAAG9C,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAAC+C,MAAM,CAACF,KAAK,CAAE;YAC1ClB,KAAK,EAAET,UAAU,CAACvB,MAAM,CAACJ,KAAK;UAAE;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,EACDvC,MAAM,CAACJ,KAAK,IAAIkC,SAAS,CAAC9B,MAAM,CAACJ,KAAK,CAAC;QAAA;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACN9C,OAAA;UAAA0C,QAAA,gBACE1C,OAAA;YAAOsD,OAAO,EAAC,UAAU;YAAAZ,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3C9C,OAAA;YACEuD,EAAE,EAAC,UAAU;YACbC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAEpD,QAAS;YAChBqD,QAAQ,EAAG9C,CAAC,IAAKN,WAAW,CAACM,CAAC,CAAC+C,MAAM,CAACF,KAAK,CAAE;YAC7ClB,KAAK,EAAET,UAAU,CAACvB,MAAM,CAACF,QAAQ;UAAE;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,EACDvC,MAAM,CAACF,QAAQ,IAAIgC,SAAS,CAAC9B,MAAM,CAACF,QAAQ,CAAC;QAAA;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,EACLvC,MAAM,CAACsB,IAAI,IAAIQ,SAAS,CAAC9B,MAAM,CAACsB,IAAI,CAAC,eACtC7B,OAAA;UACEwD,IAAI,EAAC,QAAQ;UACbjB,KAAK,EAAE;YACLN,OAAO,EAAE,MAAM;YACf2B,eAAe,EAAE,SAAS;YAC1BpB,KAAK,EAAE,OAAO;YACdL,MAAM,EAAE,MAAM;YACdgB,YAAY,EAAE,KAAK;YACnBU,SAAS,EAAE,MAAM;YACjB7B,KAAK,EAAE,MAAM;YACb8B,MAAM,EAAE;UACV,CAAE;UAAApB,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5C,EAAA,CApGQD,YAAY;EAAA,QAIFH,WAAW;AAAA;AAAAiE,EAAA,GAJrB9D,YAAY;AAsGrB,eAAeA,YAAY;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}