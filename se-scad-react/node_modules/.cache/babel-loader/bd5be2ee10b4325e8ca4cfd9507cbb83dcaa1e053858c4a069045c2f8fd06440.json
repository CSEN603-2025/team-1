{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halah\\\\OneDrive\\\\Desktop\\\\se-scad-react\\\\src\\\\companylogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyLogin() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const [showPopup, setShowPopup] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('You have no notifications!');\n  const [hasNotification, setHasNotification] = useState(false);\n  const navigate = useNavigate();\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const handleLogin = e => {\n    e.preventDefault();\n    const newErrors = {};\n\n    // Form validation\n    if (!email) {\n      newErrors.email = 'Email is required';\n    } else if (!emailRegex.test(email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!password) {\n      newErrors.password = 'Password is required';\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length > 0) return;\n\n    // Check company credentials in localStorage\n    const companies = JSON.parse(localStorage.getItem('companies')) || [];\n    const companyUser = companies.find(c => c.companyEmail === email);\n    if (!companyUser) {\n      setErrors({\n        form: 'Invalid email'\n      });\n    } else if (companyUser.password !== password) {\n      setErrors({\n        form: 'Wrong password'\n      });\n    } else if (!companyUser.isAccepted) {\n      // If the user tries to log in and is not accepted, clear any pending \"acceptance\" notification\n      // as they've now \"seen\" their status.\n      if (companyUser.hasNotification) {\n        const updatedCompanies = companies.map(c => c.companyEmail === email ? {\n          ...c,\n          hasNotification: false\n        } : c);\n        localStorage.setItem('companies', JSON.stringify(updatedCompanies));\n        setHasNotification(false); // Update UI bell\n        setNotificationMessage('You have no notifications!'); // Reset popup message\n      }\n      setErrors({\n        form: 'Your registration is pending approval.'\n      });\n    } else {\n      // Login successful and company is accepted\n      if (companyUser.hasNotification) {\n        setNotificationMessage('Your registration has been accepted!');\n        setHasNotification(true); // Ensure bell is on if popup is opened before navigation\n\n        // Reset notification state in localStorage as the user is now logging in and seeing it\n        const updatedCompanies = companies.map(c => c.companyEmail === email ? {\n          ...c,\n          hasNotification: false\n        } : c);\n        localStorage.setItem('companies', JSON.stringify(updatedCompanies));\n      } else {\n        // No specific \"acceptance\" notification, but could show other notifications if any\n        // For now, just ensure bell is off if no hasNotification flag\n        setHasNotification(false);\n        setNotificationMessage('You have no notifications!');\n      }\n      // Store logged-in company info (optional, based on your app's needs)\n      // localStorage.setItem('loggedInCompany', JSON.stringify({ email: companyUser.companyEmail, name: companyUser.companyName }));\n      navigate('/company-dashboard');\n    }\n  };\n  const inputStyle = error => ({\n    width: '100%',\n    padding: '8px',\n    marginBottom: '5px',\n    border: error ? '1px solid red' : '1px solid #ddd',\n    boxSizing: 'border-box'\n  });\n  const errorText = msg => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red',\n      fontSize: '12px',\n      marginTop: '5px'\n    },\n    children: msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n  const togglePopup = () => {\n    setShowPopup(!showPopup);\n    // If user opens popup and has an \"acceptance\" notification, then they've \"seen\" it.\n    // We could consider clearing the hasNotification flag in localStorage here too,\n    // but handleLogin is a more definitive point for clearing it.\n    // For now, opening the popup just shows the current message.\n  };\n\n  // Effect to check notification status when email input changes\n  useEffect(() => {\n    if (email) {\n      const companies = JSON.parse(localStorage.getItem('companies')) || [];\n      const companyUser = companies.find(c => c.companyEmail === email);\n      if (companyUser !== null && companyUser !== void 0 && companyUser.isAccepted && companyUser !== null && companyUser !== void 0 && companyUser.hasNotification) {\n        setNotificationMessage('Your registration has been accepted!');\n        setHasNotification(true);\n      } else {\n        // If conditions for notification are not met for the current email,\n        // turn off the bell and reset message, unless the popup is already open\n        // with a different message (less likely scenario).\n        setHasNotification(false);\n        setNotificationMessage('You have no notifications!');\n      }\n    } else {\n      // If email is cleared, turn off notification bell\n      setHasNotification(false);\n      setNotificationMessage('You have no notifications!');\n    }\n  }, [email]); // Rerun when email input changes\n\n  // Listen for localStorage changes across tabs (e.g., admin accepts registration)\n  useEffect(() => {\n    const handleStorageChange = event => {\n      if (event.key === 'companies' && event.newValue) {\n        const updatedCompanies = JSON.parse(event.newValue) || [];\n        // Check if the company corresponding to the *currently typed email* has an update\n        const companyUser = updatedCompanies.find(c => c.companyEmail === email);\n        if (companyUser !== null && companyUser !== void 0 && companyUser.isAccepted && companyUser !== null && companyUser !== void 0 && companyUser.hasNotification) {\n          setNotificationMessage('Your registration has been accepted!');\n          setHasNotification(true);\n        }\n        // Don't turn off the notification here if the condition is not met,\n        // as the other useEffect (dependent on email) or login will handle it.\n        // This avoids quick flickering if the email field is empty or doesn't match.\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, [email]); // Re-subscribe if email changes, so we always check against the current email\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      padding: '20px 0',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: togglePopup,\n      style: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        cursor: 'pointer',\n        fontSize: '24px'\n      },\n      children: [hasNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          right: '0',\n          width: '10px',\n          height: '10px',\n          // Smaller dot\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: 'translate(50%, -50%)' // Adjust position for bell image\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/bell.jpg\",\n        alt: \"Bell Icon\",\n        style: {\n          width: '50px',\n          height: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '80px',\n        right: '20px',\n        // Adjusted top position\n        width: '250px',\n        padding: '15px',\n        backgroundColor: 'white',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n        zIndex: 1001\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0,\n          marginBottom: '10px',\n          fontSize: '16px'\n        },\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '14px',\n          margin: '0 0 15px 0'\n        },\n        children: notificationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePopup,\n        style: {\n          padding: '8px 12px',\n          backgroundColor: '#6c757d',\n          // Grey color\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          width: '100%'\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '30px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        width: '400px',\n        maxWidth: 'calc(100% - 40px)',\n        backgroundColor: '#fff',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: \"Company Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold'\n            },\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n              setErrors(prev => ({\n                ...prev,\n                email: '',\n                form: ''\n              }));\n            },\n            style: inputStyle(errors.email || errors.form === 'Invalid email'),\n            placeholder: \"Enter your company email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), errors.email && errorText(errors.email), errors.form === 'Invalid email' && errorText(errors.form)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold'\n            },\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n              setErrors(prev => ({\n                ...prev,\n                password: '',\n                form: ''\n              }));\n            },\n            style: inputStyle(errors.password || errors.form === 'Wrong password'),\n            placeholder: \"Enter your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), errors.password && errorText(errors.password), errors.form === 'Wrong password' && errorText(errors.form)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), errors.form === 'Your registration is pending approval.' && errorText(errors.form), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: '12px',\n            backgroundColor: '#007bff',\n            // Blue color\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            marginTop: '10px',\n            width: '100%',\n            cursor: 'pointer',\n            fontSize: '16px',\n            fontWeight: 'bold'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyLogin, \"pXdo2uaCD/l9VH7kgwK6HGdzqbc=\", false, function () {\n  return [useNavigate];\n});\n_c = CompanyLogin;\nexport default CompanyLogin;\nvar _c;\n$RefreshReg$(_c, \"CompanyLogin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","CompanyLogin","_s","email","setEmail","password","setPassword","errors","setErrors","showPopup","setShowPopup","notificationMessage","setNotificationMessage","hasNotification","setHasNotification","navigate","emailRegex","handleLogin","e","preventDefault","newErrors","test","Object","keys","length","companies","JSON","parse","localStorage","getItem","companyUser","find","c","companyEmail","form","isAccepted","updatedCompanies","map","setItem","stringify","inputStyle","error","width","padding","marginBottom","border","boxSizing","errorText","msg","style","color","fontSize","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","togglePopup","handleStorageChange","event","key","newValue","window","addEventListener","removeEventListener","display","justifyContent","alignItems","minHeight","position","onClick","top","right","cursor","height","backgroundColor","borderRadius","transform","src","alt","boxShadow","zIndex","margin","maxWidth","textAlign","onSubmit","htmlFor","fontWeight","id","type","value","onChange","target","prev","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/halah/OneDrive/Desktop/se-scad-react/src/companylogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CompanyLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState('You have no notifications!');\r\n  const [hasNotification, setHasNotification] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n\r\n    // Form validation\r\n    if (!email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!emailRegex.test(email)) {\r\n      newErrors.email = 'Invalid email format';\r\n    }\r\n\r\n    if (!password) {\r\n      newErrors.password = 'Password is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    if (Object.keys(newErrors).length > 0) return;\r\n\r\n    // Check company credentials in localStorage\r\n    const companies = JSON.parse(localStorage.getItem('companies')) || [];\r\n    const companyUser = companies.find((c) => c.companyEmail === email);\r\n\r\n    if (!companyUser) {\r\n      setErrors({ form: 'Invalid email' });\r\n    } else if (companyUser.password !== password) {\r\n      setErrors({ form: 'Wrong password' });\r\n    } else if (!companyUser.isAccepted) {\r\n      // If the user tries to log in and is not accepted, clear any pending \"acceptance\" notification\r\n      // as they've now \"seen\" their status.\r\n      if (companyUser.hasNotification) {\r\n        const updatedCompanies = companies.map(c =>\r\n          c.companyEmail === email ? { ...c, hasNotification: false } : c\r\n        );\r\n        localStorage.setItem('companies', JSON.stringify(updatedCompanies));\r\n        setHasNotification(false); // Update UI bell\r\n        setNotificationMessage('You have no notifications!'); // Reset popup message\r\n      }\r\n      setErrors({ form: 'Your registration is pending approval.' });\r\n    } else {\r\n      // Login successful and company is accepted\r\n      if (companyUser.hasNotification) {\r\n        setNotificationMessage('Your registration has been accepted!');\r\n        setHasNotification(true); // Ensure bell is on if popup is opened before navigation\r\n\r\n        // Reset notification state in localStorage as the user is now logging in and seeing it\r\n        const updatedCompanies = companies.map(c =>\r\n          c.companyEmail === email ? { ...c, hasNotification: false } : c\r\n        );\r\n        localStorage.setItem('companies', JSON.stringify(updatedCompanies));\r\n      } else {\r\n        // No specific \"acceptance\" notification, but could show other notifications if any\r\n        // For now, just ensure bell is off if no hasNotification flag\r\n        setHasNotification(false);\r\n        setNotificationMessage('You have no notifications!');\r\n      }\r\n      // Store logged-in company info (optional, based on your app's needs)\r\n      // localStorage.setItem('loggedInCompany', JSON.stringify({ email: companyUser.companyEmail, name: companyUser.companyName }));\r\n      navigate('/company-dashboard');\r\n    }\r\n  };\r\n\r\n  const inputStyle = (error) => ({\r\n    width: '100%',\r\n    padding: '8px',\r\n    marginBottom: '5px',\r\n    border: error ? '1px solid red' : '1px solid #ddd',\r\n    boxSizing: 'border-box',\r\n  });\r\n\r\n  const errorText = (msg) => (\r\n    <div style={{ color: 'red', fontSize: '12px', marginTop: '5px' }}>{msg}</div>\r\n  );\r\n\r\n  const togglePopup = () => {\r\n    setShowPopup(!showPopup);\r\n    // If user opens popup and has an \"acceptance\" notification, then they've \"seen\" it.\r\n    // We could consider clearing the hasNotification flag in localStorage here too,\r\n    // but handleLogin is a more definitive point for clearing it.\r\n    // For now, opening the popup just shows the current message.\r\n  };\r\n\r\n  // Effect to check notification status when email input changes\r\n  useEffect(() => {\r\n    if (email) {\r\n      const companies = JSON.parse(localStorage.getItem('companies')) || [];\r\n      const companyUser = companies.find((c) => c.companyEmail === email);\r\n\r\n      if (companyUser?.isAccepted && companyUser?.hasNotification) {\r\n        setNotificationMessage('Your registration has been accepted!');\r\n        setHasNotification(true);\r\n      } else {\r\n        // If conditions for notification are not met for the current email,\r\n        // turn off the bell and reset message, unless the popup is already open\r\n        // with a different message (less likely scenario).\r\n        setHasNotification(false);\r\n        setNotificationMessage('You have no notifications!');\r\n      }\r\n    } else {\r\n      // If email is cleared, turn off notification bell\r\n      setHasNotification(false);\r\n      setNotificationMessage('You have no notifications!');\r\n    }\r\n  }, [email]); // Rerun when email input changes\r\n\r\n  // Listen for localStorage changes across tabs (e.g., admin accepts registration)\r\n  useEffect(() => {\r\n    const handleStorageChange = (event) => {\r\n      if (event.key === 'companies' && event.newValue) {\r\n        const updatedCompanies = JSON.parse(event.newValue) || [];\r\n        // Check if the company corresponding to the *currently typed email* has an update\r\n        const companyUser = updatedCompanies.find((c) => c.companyEmail === email);\r\n\r\n        if (companyUser?.isAccepted && companyUser?.hasNotification) {\r\n          setNotificationMessage('Your registration has been accepted!');\r\n          setHasNotification(true);\r\n        }\r\n        // Don't turn off the notification here if the condition is not met,\r\n        // as the other useEffect (dependent on email) or login will handle it.\r\n        // This avoids quick flickering if the email field is empty or doesn't match.\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, [email]); // Re-subscribe if email changes, so we always check against the current email\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '100vh', padding: '20px 0', position: 'relative' }}>\r\n      {/* Bell icon */}\r\n      <div onClick={togglePopup} style={{ position: 'absolute', top: '20px', right: '20px', cursor: 'pointer', fontSize: '24px' }}>\r\n        {hasNotification && (\r\n          <div style={{\r\n            position: 'absolute', top: '0', right: '0', width: '10px', height: '10px', // Smaller dot\r\n            backgroundColor: 'red', borderRadius: '50%',\r\n            transform: 'translate(50%, -50%)' // Adjust position for bell image\r\n          }}>\r\n            {/* No number, just a dot for simplicity */}\r\n          </div>\r\n        )}\r\n        {/* Ensure bell.jpg is in your public folder or update path */}\r\n        <img src=\"/bell.jpg\" alt=\"Bell Icon\" style={{ width: '50px', height: '50px' }} />\r\n      </div>\r\n\r\n      {/* Notification Pop-up */}\r\n      {showPopup && (\r\n        <div style={{\r\n          position: 'absolute', top: '80px', right: '20px', // Adjusted top position\r\n          width: '250px', padding: '15px', backgroundColor: 'white',\r\n          border: '1px solid #ddd', borderRadius: '8px',\r\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)', zIndex: 1001\r\n        }}>\r\n          <h3 style={{ marginTop: 0, marginBottom: '10px', fontSize: '16px' }}>Notifications</h3>\r\n          <p style={{ fontSize: '14px', margin: '0 0 15px 0' }}>{notificationMessage}</p>\r\n          <button\r\n            onClick={togglePopup}\r\n            style={{\r\n              padding: '8px 12px', backgroundColor: '#6c757d', // Grey color\r\n              color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer', width: '100%'\r\n            }}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ padding: '30px', border: '1px solid #ddd', borderRadius: '8px', width: '400px', maxWidth: 'calc(100% - 40px)', backgroundColor: '#fff', boxShadow: '0 2px 10px rgba(0,0,0,0.1)' }}>\r\n        <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Company Login</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <div style={{ marginBottom: '15px' }}>\r\n            <label htmlFor=\"email\" style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>Email:</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => { setEmail(e.target.value); setErrors(prev => ({ ...prev, email: '', form: '' })); }}\r\n              style={inputStyle(errors.email || errors.form === 'Invalid email')}\r\n              placeholder=\"Enter your company email\"\r\n            />\r\n            {errors.email && errorText(errors.email)}\r\n            {errors.form === 'Invalid email' && errorText(errors.form)}\r\n          </div>\r\n          <div style={{ marginBottom: '15px' }}>\r\n            <label htmlFor=\"password\" style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>Password:</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => { setPassword(e.target.value); setErrors(prev => ({ ...prev, password: '', form: '' })); }}\r\n              style={inputStyle(errors.password || errors.form === 'Wrong password')}\r\n              placeholder=\"Enter your password\"\r\n            />\r\n            {errors.password && errorText(errors.password)}\r\n            {errors.form === 'Wrong password' && errorText(errors.form)}\r\n          </div>\r\n          {errors.form === 'Your registration is pending approval.' && errorText(errors.form)}\r\n          <button type=\"submit\" style={{\r\n            padding: '12px', backgroundColor: '#007bff', // Blue color\r\n            color: 'white', border: 'none', borderRadius: '4px',\r\n            marginTop: '10px', width: '100%', cursor: 'pointer', fontSize: '16px', fontWeight: 'bold'\r\n          }}>\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}