{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halah\\\\OneDrive\\\\Desktop\\\\se-scad-react\\\\src\\\\CompanyRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyRegister() {\n  _s();\n  const [name, setName] = useState('');\n  const [industry, setIndustry] = useState('');\n  const [size, setSize] = useState('');\n  const [email, setEmail] = useState('');\n  const [logoFile, setLogoFile] = useState(null);\n  const [docFile, setDocFile] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Convert a File to a base64 data URL using FileReader API:contentReference[oaicite:4]{index=4}\n  const fileToDataUrl = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = () => reject('File reading failed');\n    reader.readAsDataURL(file);\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Basic validation\n    if (!name || !industry || !size || !email) {\n      setMessage('Please fill in all fields.');\n      return;\n    }\n\n    // Convert files to Base64 data URLs\n    const logoData = logoFile ? await fileToDataUrl(logoFile) : null;\n    const docData = docFile ? await fileToDataUrl(docFile) : null;\n\n    // Retrieve existing companies from sessionStorage (or empty array)\n    const companies = JSON.parse(sessionStorage.getItem('companies') || '[]');\n\n    // Create new company entry\n    const newCompany = {\n      id: Date.now(),\n      // Unique ID for reference\n      name,\n      industry,\n      size,\n      email,\n      logo: logoData,\n      document: docData,\n      accepted: false,\n      hasNotification: false\n    };\n\n    // Add to companies array and save back to sessionStorage:contentReference[oaicite:5]{index=5}\n    companies.push(newCompany);\n    sessionStorage.setItem('companies', JSON.stringify(companies));\n\n    // Clear form and show success message\n    setMessage('Company registered successfully!');\n    setName('');\n    setIndustry('');\n    setSize('');\n    setEmail('');\n    setLogoFile(null);\n    setDocFile(null);\n    // (File input values reset automatically when state changes to null)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Company Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Industry:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: industry,\n          onChange: e => setIndustry(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: size,\n          onChange: e => setSize(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contact Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Company Logo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => setLogoFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Document:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setDocFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyRegister, \"lKO7c2BKCYjhxEMY4niNfiVZFp0=\");\n_c = CompanyRegister;\nexport default CompanyRegister;\nvar _c;\n$RefreshReg$(_c, \"CompanyRegister\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CompanyRegister","_s","name","setName","industry","setIndustry","size","setSize","email","setEmail","logoFile","setLogoFile","docFile","setDocFile","message","setMessage","fileToDataUrl","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","handleSubmit","event","preventDefault","logoData","docData","companies","JSON","parse","sessionStorage","getItem","newCompany","id","Date","now","logo","document","accepted","hasNotification","push","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","accept","files","_c","$RefreshReg$"],"sources":["C:/Users/halah/OneDrive/Desktop/se-scad-react/src/CompanyRegister.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction CompanyRegister() {\r\n  const [name, setName] = useState('');\r\n  const [industry, setIndustry] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [logoFile, setLogoFile] = useState(null);\r\n  const [docFile, setDocFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Convert a File to a base64 data URL using FileReader API:contentReference[oaicite:4]{index=4}\r\n  const fileToDataUrl = (file) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = () => reject('File reading failed');\r\n      reader.readAsDataURL(file);\r\n    });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // Basic validation\r\n    if (!name || !industry || !size || !email) {\r\n      setMessage('Please fill in all fields.');\r\n      return;\r\n    }\r\n\r\n    // Convert files to Base64 data URLs\r\n    const logoData = logoFile ? await fileToDataUrl(logoFile) : null;\r\n    const docData = docFile ? await fileToDataUrl(docFile) : null;\r\n\r\n    // Retrieve existing companies from sessionStorage (or empty array)\r\n    const companies = JSON.parse(sessionStorage.getItem('companies') || '[]');\r\n\r\n    // Create new company entry\r\n    const newCompany = {\r\n      id: Date.now(),       // Unique ID for reference\r\n      name,\r\n      industry,\r\n      size,\r\n      email,\r\n      logo: logoData,\r\n      document: docData,\r\n      accepted: false,\r\n      hasNotification: false\r\n    };\r\n\r\n    // Add to companies array and save back to sessionStorage:contentReference[oaicite:5]{index=5}\r\n    companies.push(newCompany);\r\n    sessionStorage.setItem('companies', JSON.stringify(companies));\r\n\r\n    // Clear form and show success message\r\n    setMessage('Company registered successfully!');\r\n    setName('');\r\n    setIndustry('');\r\n    setSize('');\r\n    setEmail('');\r\n    setLogoFile(null);\r\n    setDocFile(null);\r\n    // (File input values reset automatically when state changes to null)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register Company</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Company Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            required />\r\n        </div>\r\n        <div>\r\n          <label>Industry:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={industry}\r\n            onChange={e => setIndustry(e.target.value)}\r\n            required />\r\n        </div>\r\n        <div>\r\n          <label>Size:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={size}\r\n            onChange={e => setSize(e.target.value)}\r\n            required />\r\n        </div>\r\n        <div>\r\n          <label>Contact Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            required />\r\n        </div>\r\n        <div>\r\n          <label>Company Logo:</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={e => setLogoFile(e.target.files[0])}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Document:</label>\r\n          <input\r\n            type=\"file\"\r\n            onChange={e => setDocFile(e.target.files[0])}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Submit Registration</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}